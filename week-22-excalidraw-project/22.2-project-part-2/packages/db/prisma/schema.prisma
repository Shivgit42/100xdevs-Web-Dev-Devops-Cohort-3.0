// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  name      String?
  email     String     @unique
  image     String?
  createdAt DateTime   @default(now())
  documents Document[]
  member    Member[]
}

model Document {
  id              String   @id @default(cuid())
  slug            String   @default("Untitled")
  ownerId         String
  createdAt       DateTime @default(now())
  isCollaborative Boolean  @default(false)
  owner           User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  members         Member[]
  shapes          Shape[]
}

model Member {
  id         String   @id @default(cuid())
  userId     String
  role       Role     @default(EDITOR)
  documentId String
  document   Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Shape {
  id         String   @id @default(cuid())
  type       String
  properties Properties
  color      String?
  strokeWidth Float?
  points     Json?
  src        String?
  documentId String
  document   Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Role {
  OWNER
  EDITOR
  VIEWER
}

enum Properties {
  x
  y
  x2
  y2
  width
  height
}